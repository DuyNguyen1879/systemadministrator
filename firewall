#!/bin/bash
#this is a common firewall created by 2007-7-29

modprobe ip_conntrack_ftp 
#define some variable
IPT=/sbin/iptables
CONNECTION_TRACKING="1"
INTERNET="eth0"
CLASS_A="10.0.0.0/8"
CLASS_B="172.16.0.0/12"
CLASS_C="192.168.0.0/16"
CLASS_D_MULTICAST="224.0.0.0/4"
CLASS_E_RESERVED_NET="240.0.0.0/5"
BROADCAST_SRC="0.0.0.0" 
BROADCAST_DEST="255.255.255.255"
IPADDR=120.192.81.167
LOOPBACK_INTERFACE="lo"

#Remove any existing rules
$IPT -F
$IPT -X

#setting default firewall policy
$IPT --policy OUTPUT ACCEPT
$IPT --policy FORWARD DROP
$IPT -P INPUT DROP


#stop firewall
if [ "$1" = "stop" ]
then 
echo "Filewall completely stopped!no firewall running!"
exit 0
fi

#setting for loopback interface
$IPT -A INPUT -i lo -j ACCEPT
$IPT -A OUTPUT -o lo -j ACCEPT

# Stealth Scans and TCP State Flags
# All of the bits are cleared
$IPT -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
# SYN and FIN are both set
$IPT -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
# SYN and RST are both set
$IPT -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
# FIN and RST are both set
$IPT -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
# FIN is the only bit set, without the expected accompanying ACK
$IPT -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
# PSH is the only bit set, without the expected accompanying ACK
$IPT -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
# URG is the only bit set, without the expected accompanying ACK
$IPT -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP

# Using Connection State to By-pass Rule Checking
if [ "$CONNECTION_TRACKING" = "1" ]; then
    $IPT -A INPUT  -m state --state ESTABLISHED,RELATED -j ACCEPT
    $IPT -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    $IPT -A INPUT -m state --state INVALID -j DROP
    $IPT -A OUTPUT -m state --state INVALID -j DROP
fi

##################################################################
# Source Address Spoofing and Other Bad Addresses

# Refuse spoofed packets pretending to be from 
# the external interface.s IP address
$IPT -A INPUT  -i $INTERNET -s $IPADDR -j DROP

# Refuse packets claiming to be from a Class A private network
$IPT -A INPUT  -i $INTERNET -s $CLASS_A -j DROP

# Refuse packets claiming to be from a Class B private network
$IPT -A INPUT  -i $INTERNET -s $CLASS_B -j DROP

# Refuse packets claiming to be from a Class C private network
$IPT -A INPUT  -i $INTERNET -s $CLASS_C -j DROP

$IPT -A INPUT -i $INTERNET -s 0.0.0.0/8 -j DROP
$IPT -A INPUT -i $INTERNET -s 169.254.0.0/16 -j DROP
$IPT -A INPUT -i $INTERNET -s 192.0.2.0/24 -j DROP
###################################################################
#setting access rules

#enable ssh connect
$IPT -A INPUT  -i $INTERNET -p tcp  -s 118.26.200.0/24 --dport 2222 -j ACCEPT
$IPT -A INPUT  -i $INTERNET -p tcp  -s 118.26.228.0/24 --dport 2222 -j ACCEPT
$IPT -A INPUT  -i $INTERNET -p tcp  -s 120.192.81.0/24 --dport 2222 -j ACCEPT

$IPT -A INPUT  -i $INTERNET -p tcp  --dport 53 -j ACCEPT
$IPT -A INPUT  -i $INTERNET -p udp  --dport 53 -j ACCEPT
$IPT -A INPUT  -p icmp -j ACCEPT
$IPT -A INPUT  -p tcp --dport 5666 -j ACCEPT

#enable snmp
$IPT -A INPUT  -p tcp --dport 199 -j ACCEPT
$IPT -A INPUT  -p udp --dport 161 -j ACCEPT

#enable rsync
$IPT -A INPUT  -p tcp --dport 873 -j ACCEPT

#limit ftp
$IPT -A INPUT  -i $INTERNET -p tcp  --dport 21 -j ACCEPT
$IPT -A INPUT  -i $INTERNET -p tcp  --dport 20 -j ACCEPT

#limit http
$IPT -A INPUT  -i $INTERNET -p tcp  --dport 80 -j ACCEPT
#$IPT -A INPUT  -i $INTERNET -p tcp -s 120.192.85.0/24  --dport 80 -j ACCEPT
#$IPT -A INPUT  -i $INTERNET -p tcp -s 118.26.200.0/24  --dport 80 -j ACCEPT
#$IPT -A INPUT  -i $INTERNET -p tcp -s 118.26.228.0/24  --dport 80 -j ACCEPT
