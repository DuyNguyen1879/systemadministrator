1.新建数据库budong_db,授权budong使用budong_db所有权限
CREATE DATABASE `budong_db` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
create database budong_db;
grant all privileges on budong_db.* to 'budong'@'%' identified by '123456';
只授予一部分权限
grant select,insert,update,delete  on budong_db.* to 'budong'@'%' identified by '123456';

2.回收权限
revoke all privileges on budong_db.* from 'budong'@'%' identified by '123456';

3.更改密码
A:
set password for 'budong'@'%' = password('budong123456');
mysql安装完毕后，更改mysql密码(修改自己密码)
mysql -uroot 
set password=password('budong');
B:
use mysql;
update user set password=password('新密码') where User="budong" and Host="localhost";

4.删除用户
drop user 'budong'@'%';

5.忘记root密码
mysqld_safe --skip-grant-tables &
mysql -u root mysql
use mysql;
UPDATE user SET password=PASSWORD("new password") WHERE user='root';
FLUSH PRIVILEGES;

6.mysql主从错误
stop slave; 
set global sql_slave_skip_counter=1;
slave start;
修改/etc/my.cnf
slave_skip_errors=1690
slave-skip-errors = 1690,1062,1701

7.mysql 优化
key_buffer_size 索引缓存,查看书否够用 Key_blocks_unused 
table_cache 打开表的缓存数量，参照 show global status like 'open_tables';

8.备份恢复所有的数据库
mysqldump -uroot -p --all-databases > alldb.sql
mysql -u root -p < alldb.sql

innobackupex --user=root --password=budong --defaults-file=/etc/my.cnf /data/data_bak/
innobackupex --defaults-file=/etc/my.cnf --user=root --password=budong --apply-log   /data/data_bak/2011-12-11_18-50-55 
innobackupex --defaults-file=/etc/my.cnf --user=root --password=budong --copy-back   /data/data_bak/2011-12-11_18-50-55 
chown mysql:mysql /data/mysql_db/

8.mysiam 查看key_buffer_size是否够用
mysql> show global status like 'key%';
+------------------------+------------+
| Variable_name          | Value      |
+------------------------+------------+
| Key_blocks_not_flushed | 0          |
| Key_blocks_unused      | 261564     |
| Key_blocks_used        | 1453172    |
| Key_read_requests      | 2437433810 |
| Key_reads              | 3306925    |
| Key_write_requests     | 11545727   |
| Key_writes             | 8712678    |
+------------------------+------------+

9.查看mysql编译参数
cat /usr/local/mysql/bin/mysqlbug | grep CONFIGURE_LINE

10.建表时加引擎
CREATE TABLE t (i INT) ENGINE = INNODB DEFAULT CHARSET=utf8;
CREATE TABLE t (i INT) TYPE = MEMORY;

11,建表时加索引
create table index1(id int,name varchar(20),sex boolean, index(id));
create table index2(id int unique,name varchar(20),unique index index2_id(id asc));
create table index3(id int,info varchar(20),fulltext index index_info(info)) ENGINE = MYISAM ;
create table index4(id int,subject varchar(30),index index4_st (subject(10)));
create table index5(id int,name varchar(20),sex char(4),index index5_ns(name,sex));
create table index6(id int,space geometry not null,spatial index index6_sp(space)) engine=myisam;

create table example0(id int(11) default null,name varchar(20) default null,sex tinyint default null);
create index index7_id on example0(id);

create unique index index8_id on index8(course_id);
create fulltext index index9_info on index9(info);
create index index10_addr on index10(address(4));
create index index11_na on index11(name,address);
create spatial index index12_line on index12(line);

alter table index11 add index index13_name(name(2));
alter table index14 add unique index index14_id(course_id);
alter table index15 add fulltext index index15_info(info);
alter table index16 add index index16_addr(address(4));
alter table index17 add index index17_na(name,address);
alter table index18 add spatial index index18_line(line);

drop index index_name on table_name;
drop index id on index1;

12,表的基本操作
create table example1(stu_id int primary key,stu_name varchar(20),stu_sex boolean);
create table example2(stu_id int,course_id int,grade float,primary key(stu_id,course_id));
create table example3(id int primary key,stu_id int,course_id int,constraint c_fk foreign key(stu_id,course_id) references example2(stu_id,course_id));

alter table old_table_name rename new_table_name;
alter table example7 rename new_example7;

alter table 表名 modify 属性名 数据类型;
alter table new_example7 modify e char(30);

alter table 表名 change 旧属性名 新属性名 新数据类型；
alter table new_example7 change e en char(30);

alter table 表名 add 属性名1 数据类型 [完整性约束条件] [first| after 属性名2];
alter table new_example7 add phone varchar(20);

alter table 表名 drop 属性名；
alter table example7 drop num;

alter table 表名 modify 属性名1 数据类型 first|after 属性名2；
alter table example7 modify age int(4) after id;

alter table 表名 engine=存储引擎；
alter table user engine=myisam;

alter table 表名 drop foreign key 外键别名；
alter table example3 drop foreign key c_fk;

drop table table_name;
delete from table_name where ...;

my.cnf
wait_timeout=3600
set global wait_timeout=3600;
show global variables like 'wait_timeout';

外键：
Create Table: CREATE TABLE `books` (
  `id` int(11) NOT NULL DEFAULT '0',
  `bookname` varchar(10) DEFAULT NULL,
  `userid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_userid_id` (`userid`),
  CONSTRAINT `fk_userid_id` FOREIGN KEY (`userid`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8


查看索引的使用情况：
show status like 'Handler_read%';

插入大量数据时(myisam)：
alter table sales disable keys;
load the data
alter table sales enable keys;

优化group by 禁止排序：
explain select year,sum(profit) from sales group by year order by null\G

查询时是不是用索引：
explain select * from sales use index(y)  where year=2000 \G
explain select * from sales ignore index(y)  where year=2000 \G
explain select * from sales force index(y)  where year=2000 \G

分析一下表的数据类型：
select * from sales procedure analyse()\G

查看mysql的参数信息：
mysqld --verbose --help | more

获取innodb行锁争用情况
show status like 'innodb_row_lock%';

查看innodb表状态
show table status from db_name like 'table_name'\G


数据库转引擎：
1.修改脚本
vim /usr/local/mysql/bin/mysql_convert_table_format
$opt_engine="INNODB";
2.转换引擎
/usr/local/mysql/bin/mysql_convert_table_format budongdb --user=root --password=mumayi --socket=/tmp/mysql.sock  


数据库在线修改表结构：
pt-online-schema-change 修改的表必须要有主键
修改引擎：
pt-online-schema-change -h localhost -u root -p mumayi --alter="engine=innodb" --execute D=budong,t=budong
增加索引：
pt-online-schema-change -h localhost -u root -p mumayi --alter="add index index_sex(sex)" --execute D=budong,t=budong
增加一个字段：
pt-online-schema-change -h localhost -u root -p mumayi --alter="add phone varchar(255)" --execute D=budong,t=budong
删除一个字段：
pt-online-schema-change -h localhost -u root -p mumayi --alter="drop phone" --execute D=budong,t=budong


单机多个mysql实例：
查资料呀：
mysqld_multi --example
cp support-files/mysqld_multi.server.sh /etc/init.d/
chmod a+x /etc/init.d/mysqld_multi.server.sh
/etc/init.d/mysqld_multi.server.sh start 1-2

查看mysql binlog日志内容：
row-based的格式，默认情况下只能看到一些经过base-64编码的信息
/usr/local/mysql/bin/mysqlbinlog --no-defaults -vv mysql-bin.000044 >/tmp/bin.sql

mysql主从停止io和sql线程：
stop slave io_thread;
stop slave sql_thread;

修改mysql数据库密码：
UPDATE mysql.user SET Password=PASSWORD('newpwd') WHERE User='root';
FLUSH PRIVILEGES;

mysql安全使用mysql用户来运行：
[mysqld]
user=mysql

禁用索引，启用索引：
alter table hit_counter disable keys;
alter table hit_counter enable keys;

检查重复索引：
pt-duplicate-key-checker --host=localhost --user=root --password=password --database=db_name

查看mysql数据库的信息汇总:
pt-mysql-summary --host=localhost --user=root --password=mumayi

检测数据库死锁：
pt-deadlock-logger --user=root --password=mumayi h=localhost

检测数据库外键错误：
pt-fk-error-logger --host=localhost --user=root --password=mumayi D=budong,t=budong

查看show global status信息：
pt-mext -r -- mysqladmin ext --user=root --password=mumayi  -i10 -c3

比较mysql配置文件的差异：
pt-config-diff my-innodb-heavy-4G.cnf.sh /home/mysql/my.cnf


找到什么干些什么：
pt-find --host=localhost --user=root --password=mumayi --ctime +1 --engine MyISAM


show processlist查看
select * from information_schema.processlist where command="Query";

查看mysql slave tree:
pt-slave-find --host=localhost --user=root --password=mumayi

查看mysql复制错误，重启slave
pt-slave-restart S=/home/mysql/tmp/mysql.sock --user=root --password=mumayi


查看QPS,TPS:
mysqladmin -uroot -p  extended-status -i1 | awk 'BEGIN {switch=0;print "QPS   Commit Rollback   TPS    Threads_con Threads_run \n------------------------------------------------------- "}  
    $2 ~ /Queries$/            {q=$4-lq;lq=$4;}  
    $2 ~ /Com_commit$/         {c=$4-lc;lc=$4;}  
    $2 ~ /Com_rollback$/       {r=$4-lr;lr=$4;}  
    $2 ~ /Threads_connected$/  {tc=$4;}  
    $2 ~ /Threads_running$/    {tr=$4;if(switch==0) switch=1; else printf "%-6d %-8d %-7d %-8d %-10d %d \n", q,c,r,c+r,tc,tr;}'



innotop:
yum -y install innotop


禁用查询缓存：
http://dev.mysql.com/doc/refman/5.0/en/query-cache-in-select.html
sql_no_cache

mysqlbinlog --no-defaults --base64-output=decode-rows -v -v

